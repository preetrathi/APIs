
1. for checking git is installed or not:
    git --version

2. if not then installed from google

3. configure git
    git config --global user.name "preetrathi"
    git config --global user.email "preetkumarmaheshwari@gmail.com"

4. ðŸ§© Step 4: Continue with GitHub setup & Initialization
    git init

5. Create .gitignore file exclude your virtual environment and other common things

6. Create Requirements.txt
    pip freeze > requirements.txt

7. Initialize Git and make first commit
    # add files (git will ignore things listed in .gitignore)
        git add .
    # commit
        git commit -m "Initial commit: project skeleton, .gitignore and requirements"

8. Create a GitHub repository

9. Link local repo to GitHub and push
    git branch -M main
    git remote add origin https://github.com/preetrathi/APIs.git
    git push -u origin main

After 1st push

10 Work flow: make changes and push
    # check status
        git status

    # stage changes
        git add .

    # commit with message
        git commit -m "Add new endpoint: GET /patients"

    # push
        git push

11 How to clone and recreate the environment on another machine
    git clone https://github.com/yourusername/fastapi-patients.git
    cd fastapi-patients

    # create venv locally
    python -m venv api_env
    .\api_env\Scripts\Activate

    # install packages
    pip install -r requirements.txt

12 Extra good practices
    Keep secrets out of repo: put them in a .env file and add .env to .gitignore.
    Use README.md with project setup and run instructions (I can create a template README for you).
    Commit often with clear messages.
    Use branches for features and PRs for review.
    Consider GitHub Actions for CI (optional later).

